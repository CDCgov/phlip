// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodingValidation should render Coding component correctly 1`] = `
<FlexGrid
  align="stretch"
  circular={false}
  className="undefined"
  container={true}
  flex={true}
  justify="stretch"
  padding={0}
  raised={false}
  style={
    Object {
      "display": "flex",
      "flexWrap": "nowrap",
      "height": "100%",
      "overflow": "hidden",
      "position": "relative",
      "width": "100%",
    }
  }
  type="row"
>
  <Alert
    actions={
      Array [
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Cancel",
        },
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Continue",
        },
      ]
    }
    open={false}
    title={null}
  >
    <WithStyles(Typography)
      style={
        Object {
          "whiteSpace": "pre-wrap",
        }
      }
      variant="body1"
    >
      You are applying your answer to ALL categories. Previously answered questions will be changed.
    </WithStyles(Typography)>
  </Alert>
  <Alert
    actions={
      Array [
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Cancel",
        },
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Continue",
        },
      ]
    }
    open={false}
    title={null}
  >
    <WithStyles(Typography)
      style={
        Object {
          "whiteSpace": "pre-wrap",
        }
      }
      variant="body1"
    >
      Your answer to this question is still being saved. If you continue, your changes might not be saved.
    </WithStyles(Typography)>
  </Alert>
  <ApiErrorAlert
    actions={
      Array [
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Try Again",
        },
      ]
    }
    content={null}
    onCloseAlert={[Function]}
    open={false}
  />
  <ApiErrorAlert
    actions={Array []}
    content={null}
    onCloseAlert={[Function]}
    open={false}
  />
  <FlexGrid
    align="stretch"
    circular={false}
    container={true}
    flex={true}
    justify="stretch"
    padding={0}
    raised={false}
    style={
      Object {
        "flexWrap": "nowrap",
        "overflowX": "hidden",
        "overflowY": "auto",
        "width": "100%",
      }
    }
    type="column"
  >
    <withRouter(WithTheme(Header))
      currentJurisdiction={
        Object {
          "id": 11,
        }
      }
      empty={false}
      onGoBack={[Function]}
      onJurisdictionChange={[Function]}
      pageTitle="Coding"
      projectId={1}
      projectName="Project Test"
    />
    <FlexGrid
      align="stretch"
      circular={false}
      container={true}
      flex={true}
      justify="stretch"
      padding={0}
      raised={false}
      style={
        Object {
          "backgroundColor": "#f5f5f5",
        }
      }
      type="row"
    >
      <FlexGrid
        align="stretch"
        circular={false}
        container={true}
        flex={true}
        justify="stretch"
        padding={0}
        raised={false}
        style={
          Object {
            "overflow": "auto",
          }
        }
        type="row"
      >
        <FlexGrid
          align="stretch"
          circular={false}
          container={false}
          flex={false}
          justify="stretch"
          padding={0}
          raised={false}
          style={Object {}}
          type="column"
        />
        <FlexGrid
          align="stretch"
          circular={false}
          container={true}
          flex={true}
          justify="stretch"
          padding={0}
          raised={false}
          style={
            Object {
              "minHeight": 500,
              "overflow": "auto",
              "padding": "1px 15px 20px 15px",
            }
          }
          type="row"
        >
          <Connect(QuestionCard)
            currentIndex={0}
            getNextQuestion={[Function]}
            getPrevQuestion={[Function]}
            onAnswer={[Function]}
            onChange={[Function]}
            onChangeCategory={[Function]}
            onChangeTextAnswer={[Function]}
            onClearAnswer={[Function]}
            onOpenAlert={[Function]}
            onOpenFlagConfirmAlert={[Function]}
            onSave={[Function]}
            onSaveFlag={[Function]}
            page="coding"
            showNextButton={false}
            totalLength={1}
          />
          <FlexGrid
            align="stretch"
            circular={false}
            container={false}
            flex={false}
            justify="stretch"
            padding={0}
            raised={false}
            style={
              Object {
                "maxWidth": 15,
                "minWidth": 15,
                "width": 15,
              }
            }
            type="column"
          />
          <Resizable
            defaultSize={
              Object {
                "height": "100%",
                "width": "50%",
              }
            }
            enable={
              Object {
                "bottom": false,
                "bottomLeft": false,
                "bottomRight": false,
                "left": true,
                "right": false,
                "top": false,
                "topLeft": false,
                "topRight": false,
              }
            }
            grid={
              Array [
                1,
                1,
              ]
            }
            handleComponent={
              Object {
                "left": [Function],
              }
            }
            handleStyles={
              Object {
                "left": Object {
                  "height": "fit-content",
                  "left": -19,
                  "top": "50%",
                  "width": "fit-content",
                },
              }
            }
            lockAspectRatio={false}
            lockAspectRatioExtraHeight={0}
            lockAspectRatioExtraWidth={0}
            minWidth="10%"
            onResize={[Function]}
            onResizeStart={[Function]}
            onResizeStop={[Function]}
            resizeRatio={1}
            scale={1}
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <Connect(DocumentList)
              page="coding"
              projectId={1}
              questionId={1}
              saveUserAnswer={[Function]}
            />
          </Resizable>
        </FlexGrid>
      </FlexGrid>
    </FlexGrid>
  </FlexGrid>
  <Alert
    actions={
      Array [
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Cancel",
        },
        Object {
          "onClick": [Function],
          "type": "button",
          "value": "Yes",
        },
      ]
    }
    open={false}
    title={null}
  >
    <WithStyles(Typography)
      variant="body1"
    >
      Are you sure you want to clear this flag?
    </WithStyles(Typography)>
  </Alert>
  <ApiErrorAlert
    actions={Array []}
    content={null}
    onCloseAlert={[Function]}
    open={false}
  />
</FlexGrid>
`;
