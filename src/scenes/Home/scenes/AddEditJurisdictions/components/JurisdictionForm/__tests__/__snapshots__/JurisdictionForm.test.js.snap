// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home scene - AddEditJurisdictions - JurisdictionForm should render correctly 1`] = `
<FormModal
  asyncBlurFields={
    Array [
      "name",
    ]
  }
  asyncValidate={null}
  form="jurisdictionForm"
  handleSubmit={[Function]}
  height="400px"
  initialValues={
    Object {
      "name": "Jurisdiction Name",
    }
  }
  onClose={[Function]}
  open={true}
  validate={[Function]}
  width="600px"
>
  <ModalTitle
    closeButton={true}
    edit={false}
    editButton={false}
    onCloseForm={[Function]}
    title="Edit Jurisdiction"
  />
  <WithStyles />
  <ModalContent>
    <Container
      column={true}
      flex={false}
      spacing={0}
      style={
        Object {
          "minHeight": 230,
          "minWidth": 550,
          "padding": "30px 15px",
        }
      }
    >
      <Row
        component={
          <WithStyles
            item={true}
          />
        }
        displayFlex={false}
        flex={false}
        style={
          Object {
            "paddingBottom": 20,
          }
        }
      >
        <Field
          component={[Function]}
          getSuggestionValue={[Function]}
          handleClearSuggestions={[Function]}
          handleGetSuggestions={[Function]}
          handleSuggestionSelected={[Function]}
          inputProps={
            Object {
              "disabled": true,
              "id": "jurisdiction-name",
              "label": "Name",
              "onChange": [Function],
              "placeholder": "Enter jurisdiction name",
              "required": true,
              "value": "Jurisdiction Name",
            }
          }
          name="name"
          renderSuggestion={[Function]}
          suggestions={Array []}
          validate={[Function]}
        />
      </Row>
      <Container
        column={false}
        flex={false}
        spacing={0}
        style={
          Object {
            "marginTop": 30,
          }
        }
      >
        <Column
          component={
            <WithStyles
              item={true}
            />
          }
          displayFlex={false}
          flex={true}
        >
          <Field
            autoOk={true}
            component={[Function]}
            dateFormat="MM/DD/YYYY"
            label="Segment Start Date"
            name="startDate"
            required={true}
            validate={[Function]}
          />
        </Column>
        <Column
          component={
            <WithStyles
              item={true}
            />
          }
          displayFlex={false}
          flex={false}
        >
          <Field
            autoOk={true}
            component={[Function]}
            dateFormat="MM/DD/YYYY"
            label="Segment End Date"
            name="endDate"
            required={true}
            validate={[Function]}
          />
        </Column>
      </Container>
    </Container>
  </ModalContent>
  <button
    onClick={[Function]}
    style={
      Object {
        "display": "none",
      }
    }
    type="submit"
  />
  <WithStyles
    actions={
      Array [
        Object {
          "onClick": [Function],
          "otherProps": Object {
            "aria-label": "Close form",
          },
          "type": "button",
          "value": "Cancel",
        },
        Object {
          "disabled": false,
          "otherProps": Object {
            "aria-label": "Save form",
          },
          "type": "submit",
          "value": "Save",
        },
      ]
    }
  />
</FormModal>
`;
