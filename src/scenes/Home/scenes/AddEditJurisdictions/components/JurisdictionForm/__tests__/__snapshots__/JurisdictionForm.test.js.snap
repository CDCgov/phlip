// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home scene - AddEditJurisdictions - JurisdictionForm should render correctly 1`] = `
<withStyles(Modal)
  onClose={[Function]}
  open={true}
>
  <ModalTitle
    closeButton={false}
    edit={false}
    editButton={false}
    onCloseForm={[Function]}
    title="Edit Jurisdiction"
  />
  <withStyles(Divider) />
  <ModalContent>
    <form>
      <Container
        column={true}
        flex={false}
        spacing={0}
        style={
          Object {
            "minHeight": 230,
            "minWidth": 550,
            "padding": "30px 15px",
          }
        }
      >
        <Row
          component={
            <withStyles(GridWrapper)
              item={true}
            />
          }
          displayFlex={false}
          flex={false}
          style={
            Object {
              "paddingBottom": 20,
            }
          }
        >
          <withStyles(Autocomplete)
            InputProps={
              Object {
                "disabled": true,
                "error": false,
                "helperText": "",
                "label": "Name",
                "onBlur": [Function],
                "placeholder": "Enter jurisdiction name",
                "required": true,
              }
            }
            getSuggestionValue={[Function]}
            handleClearSuggestions={[Function]}
            handleGetSuggestions={[Function]}
            handleSuggestionSelected={[Function]}
            inputProps={
              Object {
                "id": "jurisdiction-name",
                "onChange": [Function],
                "value": "",
              }
            }
            name="name"
            renderSuggestion={[Function]}
            suggestions={Array []}
          />
        </Row>
        <Container
          column={false}
          flex={false}
          spacing={0}
          style={
            Object {
              "marginTop": 30,
            }
          }
        >
          <Column
            component={
              <withStyles(GridWrapper)
                item={true}
              />
            }
            displayFlex={false}
            flex={true}
          >
            <DatePicker
              autoOk={true}
              dateFormat="MM/DD/YYYY"
              error=""
              label="Segment Start Date"
              maxDate="12/31/2050"
              minDate="01/01/1850"
              name="startDate"
              onChange={[Function]}
              onInputChange={[Function]}
              required={true}
            />
          </Column>
          <Column
            component={
              <withStyles(GridWrapper)
                item={true}
              />
            }
            displayFlex={false}
            flex={false}
          >
            <DatePicker
              autoOk={true}
              dateFormat="MM/DD/YYYY"
              error=""
              label="Segment End Date"
              maxDate="12/31/2050"
              minDate="01/01/1850"
              name="endDate"
              onChange={[Function]}
              onInputChange={[Function]}
              required={true}
            />
          </Column>
        </Container>
      </Container>
    </form>
  </ModalContent>
  <button
    onClick={[Function]}
    style={
      Object {
        "display": "none",
      }
    }
    type="submit"
  />
  <withStyles(ModalActions)
    actions={
      Array [
        Object {
          "onClick": [Function],
          "otherProps": Object {
            "aria-label": "Close form",
          },
          "type": "button",
          "value": "Cancel",
        },
        Object {
          "disabled": false,
          "onClick": [Function],
          "otherProps": Object {
            "aria-label": "Save form",
          },
          "value": <UNDEFINED>
            Save
          </UNDEFINED>,
        },
      ]
    }
  />
</withStyles(Modal)>
`;
