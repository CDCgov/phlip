stages:
  - lint
  - unit test
  - staging
  - e2e test
  - build
  - deploy

lint:
  stage: lint
  script:
    - npm install
    - npm run lint
  tags:
    - phlip2-dev
  only:
    - development
    - test
    - master
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 week
  environment:
    name: Internal PHLIP2 Dev
    url: http://lvscent7064.lab.local

test:
  stage: unit test
  script:
    - npm run test:local
  tags:
    - phlip2-dev
  only:
    - development
    - test
    - master
  dependencies:
    - lint
  environment:
    name: Internal PHLIP2 Dev
    url: http://lvscent7064.lab.local

build and deploy on staging:
  stage: staging
  before_script:
    - if pm2 list | grep fe; then pm2 stop fe; else echo "no fe process running"; fi
  script:
    - npm install
    - echo "APP_DOC_MANAGE_API=http://0.0.0.0:3000" > .env
    - echo "APP_API_URL=http://0.0.0.0:8000" >> .env
    - echo "HEADLESS=1" >> .env
    - echo "NODE_ENV=development" >> .env
    - npm run build
    - pm2 start scripts/serve.js --name fe
    - cd ../esquire-backend
    - sudo /usr/local/bin/docker-compose down
    - if sudo docker ps -a | grep mssqldev; then sudo docker rm mssqldev; else echo "no sql container"; fi
    - sudo docker volume prune -f
    - sudo /usr/local/bin/docker-compose up -d
    - cd ../esquire-doc-management
    - sudo /usr/local/bin/docker-compose down
    - if sudo docker ps -a | grep doc-manage-mongo; then sudo docker rm doc-manage-mongo; else echo "no mongo container"; fi
    - sudo docker volume prune -f
    - sudo /usr/local/bin/docker-compose up -d
    - if [ ! -d tmp/ ]; then sudo mkdir tmp/; fi
    - sudo chmod 777 tmp/
    - sudo chown gitlab-runner:gitlab-runner tmp/
    - /home/gitlab-runner/scripts-phlip/add_jurisdictions.sh
  tags:
    - phlip2-dev
  only:
    - staging
  artifacts:
    paths:
      - dist/
      - node_modules/
    expire_in: 1 hour
  environment:
    name: Internal PHLIP2 Dev
    url: http://lvscent7064.lab.local

run e2e tests staging:
  stage: e2e test
  script:
    - npm run test:e2e
  tags:
    - phlip2-dev
  only:
    - staging
  dependencies:
    - build and deploy on staging
  environment:
    name: Internal PHLIP2 Dev
    url: http://lvscent7064.lab.local

build dev azure:
  stage: build
  script:
    - npm install
    - cat ~iiu-deploy/config/.env.fe >> .env
    - echo "APP_PIPELINE= $CI_PIPELINE_ID " >> .env
    - echo "APP_BUILT_TIMESTAMP = $(date +%s)" >> .env
    - npm run build
    - cp -r ./dist ~iiu-deploy/esquire-frontend-deploy/
    - cp -r ./scripts ~iiu-deploy/esquire-frontend-deploy/
    - cp -r ./config ~iiu-deploy/esquire-frontend-deploy/
    - cp ./package.json ~iiu-deploy/esquire-frontend-deploy/
    - cp .env ~iiu-deploy/esquire-frontend-deploy/
  tags:
    - az-phlip2dev-fe
  when: manual
  allow_failure: false
  only:
    - development
  environment:
    name: Azure PHLIP2 Dev
    url: https://phlip2dev.phiresearchlab.org
  dependencies: []

deploy dev azure:
  stage: deploy
  script:
    - cd ~iiu-deploy/esquire-frontend-deploy
    - npm install --production
    - if pm2 list | grep phlip-fe; then pm2 stop phlip-fe; else echo "no phlip-fe process running"; fi
    - pm2 start scripts/serve.js --name phlip-fe
  tags:
    - az-phlip2dev-fe
  environment:
    name: Azure PHLIP2 Dev
    url: https://phlip2dev.phiresearchlab.org
  only:
    - development
  dependencies: []

build test azure:
  stage: build
  script:
    - npm install
    - cat ~iiu-deploy/config/.env.fe >> .env
    - echo "APP_PIPELINE= $CI_PIPELINE_ID " >> .env
    - echo "APP_BUILT_TIMESTAMP = $(date +%s)" >> .env
    - npm run build
    - cp -r ./dist ~iiu-deploy/esquire-frontend-deploy/
    - cp -r ./scripts ~iiu-deploy/esquire-frontend-deploy/
    - cp -r ./config ~iiu-deploy/esquire-frontend-deploy/
    - cp ./package.json ~iiu-deploy/esquire-frontend-deploy/
    - cp .env ~iiu-deploy/esquire-frontend-deploy/
  tags:
    - az-phliptest-fe
  when: manual
  allow_failure: false
  only:
    - test
  environment:
    name: Azure PHLIP Test
    url: https://phliptest.phiresearchlab.org

deploy test azure:
  stage: deploy
  script:
    - cd ~iiu-deploy/esquire-frontend-deploy
    - npm install --production
    - if pm2 list | grep phlip-fe; then pm2 stop phlip-fe; else echo "no phlip-fe process running"; fi
    - pm2 start scripts/serve --name phlip-fe
  tags:
    - az-phliptest-fe
  only:
    - test
  environment:
    name: Azure PHLIP Test
    url: https://phliptest.phiresearchlab.org
  dependencies: []

build master azure:
  stage: build
  script:
    - npm install
    - cat ~iiu-deploy/config/.env.fe >> .env
    - echo "APP_PIPELINE= $CI_PIPELINE_ID " >> .env
    - echo "APP_BUILT_TIMESTAMP = $(date +%s)" >> .env
    - npm run build
    - cp -r ./dist ~iiu-deploy/esquire-frontend-deploy/
    - cp -r ./scripts ~iiu-deploy/esquire-frontend-deploy/
    - cp -r ./config ~iiu-deploy/esquire-frontend-deploy/
    - cp ./package.json ~iiu-deploy/esquire-frontend-deploy/
    - cp .env ~iiu-deploy/esquire-frontend-deploy/
  tags:
    - az-phlip-fe
  when: manual
  allow_failure: false
  only:
    - master
  environment:
    name: Azure PHLIP
    url: https://phlip.phiresearchlab.org
  dependencies: []

deploy master azure:
  stage: deploy
  script:
    - cd ~iiu-deploy/esquire-frontend-deploy
    - npm install --production
    - if pm2 list | grep phlip-fe; then pm2 stop phlip-fe; else echo "no phlip-fe process running"; fi
    - pm2 start scripts/serve.js --name phlip-fe
  tags:
    - az-phlip-fe
  only:
    - master
  environment:
    name: Azure PHLIP
    url: https://phlip.phiresearchlab.org
  dependencies: []
